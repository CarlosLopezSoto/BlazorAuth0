@page "/fetchdata-1"
@using FechDataDomain
@using FechDataApplication
@using FechDataConfiguration
@using FechDataConfiguration.FechDataReadJSON
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject WeatherForecastService ForecastService
@attribute [Authorize(Roles = "Response")]
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>
<AuthorizeView Policy="read:cuestion">
    <p>You has the policy</p>
</AuthorizeView>
@fech.Name
@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    FechDataConfiguration.FechDataConfigObj.FechDataConf fech;
    protected override void OnInitialized()
    {
        fech = FechDataRead.GetConfig();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
            StateHasChanged();
        }
    }
}